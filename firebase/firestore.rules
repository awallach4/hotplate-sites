rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

  	function isLoggedIn() {
    	return request.auth.uid != null && request.auth.token.email_verified == true;
    }
  	
    function isWebmaster() {
    	return isLoggedIn() && request.auth.token.webmaster == true;
		}
    
    function isAdmin() {
    	return isLoggedIn() && request.auth.token.admin == true;
    }
    
    match /pages/{page} {
    	allow read;
      allow create: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['dbPath', 'id', 'index', 'name', 'permissions']) &&
        request.resource.data.keys().hasOnly(['dbPath', 'id', 'index', 'name', 'permissions']) &&
        request.resource.data.dbPath is string &&
        request.resource.data.id is string &&
        request.resource.data.index is int &&
        request.resource.data.name is string &&
        request.resource.data.permissions is string;
      allow update: if
        isWebmaster() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['dbPath', 'id', 'index', 'name', 'permissions']);
      allow delete: if isWebmaster();
    }
    
    match /pages/{page}/components/{component} {
    	allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.keys().hasOnly(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.vueComp is string &&
        request.resource.data.index is int;
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        resource.data.data.hidden == false;
      allow read: if
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        resource.data.data.hidden == false;
    }
    
    match /pages/{page}/components/{component}/col1/{data} {
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.keys().hasOnly(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.vueComp is string &&
        request.resource.data.index is int;
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.data.hidden == false;
      allow read: if 
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.data.hidden == false;
    }

    match /pages/{page}/components/{component}/col2/{data} {
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.keys().hasOnly(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.vueComp is string &&
        request.resource.data.index is int;
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.data.hidden == false;
      allow read: if 
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.data.hidden == false;
    }

    match /pages/{page}/components/{component}/col3/{data} {
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.keys().hasOnly(['data', 'props', 'vueComp', 'index']) &&
        request.resource.data.vueComp is string &&
        request.resource.data.index is int;
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.data.hidden == false;
      allow read: if 
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.data.hidden == false;
    }

    match /pages/{page}/components/{component}/messages/{message} {
      allow read, write: if isWebmaster();
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false;
      allow read: if 
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false;
      allow update: if
        isLoggedIn() && (
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' ||
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public'
        ) && 
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false && (
          request.resource.data.diff(resource.data).affectedKeys().hasAll(['comments']) &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['comments']) &&
          request.resource.data.comments is list &&
          resource.data.comments is list
        );
      allow create, update: if
        isLoggedIn() && (
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' ||
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public'
        ) &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false && (
          request.resource.data.uid == request.auth.uid ||
          resource.data.uid == request.auth.uid
        ) &&
        request.resource.data.keys().hasAll(['comments', 'content', 'createdAt', 'date', 'files', 'id', 'img', 'name', 'uid']) &&
        request.resource.data.keys().hasOnly(['comments', 'content', 'createdAt', 'date', 'files', 'id', 'img', 'name', 'uid']) &&
        request.resource.data.comments is list &&
        request.resource.data.content is string &&
        request.resource.data.createdAt is timestamp &&
        request.resource.data.date is string &&
        request.resource.data.files is list &&
        request.resource.data.id is string &&
        request.resource.data.img is string &&
        request.resource.data.name is string &&
        request.resource.data.uid is string;
      allow delete: if
        isLoggedIn() && (
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' ||
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public'
        ) &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false && (
          request.resource.data.uid == request.auth.uid ||
          resource.data.uid == request.auth.uid
        );
    }

    match /pages/{page}/components/{component}/signup-sheets/{sheet} {
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['created', 'enabled', 'header', 'hidden', 'id', 'multiple', 'roles', 'text', 'times', 'useCard']) &&
        request.resource.data.keys().hasOnly(['created', 'enabled', 'header', 'hidden', 'id', 'multiple', 'roles', 'text', 'times', 'useCard']) &&
        request.resource.data.created is timestamp &&
        request.resource.data.enabled is bool &&
        request.resource.data.header is string &&
        request.resource.data.hidden is bool &&
        request.resource.data.id is string &&
        request.resource.data.multiple is bool &&
        request.resource.data.roles is list &&
        request.resource.data.text is string &&
        request.resource.data.times is list &&
        request.resource.data.useCard is bool;
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.hidden == false;
      allow read: if 
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        resource.data.hidden == false;
    }

    match /pages/{page}/components/{component}/signup-sheets/{sheet}/signups/{signup} {
      allow read, write: if isWebmaster();
      allow read: if
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)/signup-sheets/$(sheet)).data.hidden == false;
      allow read: if 
        isLoggedIn() &&
        get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)/signup-sheets/$(sheet)).data.hidden == false;
      allow create, update: if
        isLoggedIn() && (
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' ||
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public'
        ) &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)/signup-sheets/$(sheet)).data.hidden == false &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)/signup-sheets/$(sheet)).data.enabled == true && (
          request.resource.data.uid == request.auth.uid ||
          resource.data.uid == request.auth.uid
        ) &&
        request.resource.data.keys().hasAll(['comments', 'email', 'key', 'name', 'role', 'shift', 'time', 'uid']) &&
        request.resource.data.keys().hasOnly(['comments', 'email', 'key', 'name', 'role', 'shift', 'time', 'uid']) &&
        request.resource.data.comments is string &&
        request.resource.data.email is string &&
        request.resource.data.key is string &&
        request.resource.data.name is string &&
        request.resource.data.role is string &&
        request.resource.data.shift is string &&
        request.resource.data.time is timestamp &&
        request.resource.data.uid is string;
      allow delete: if
        isLoggedIn() && (
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'users' ||
          get(/databases/$(database)/documents/pages/$(page)).data.permissions == 'public'
        ) &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)).data.data.hidden == false &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)/signup-sheets/$(sheet)).data.hidden == false &&
        get(/databases/$(database)/documents/pages/$(page)/components/$(component)/signup-sheets/$(sheet)).data.enabled == true && (
          request.resource.data.uid == request.auth.uid ||
          resource.data.uid == request.auth.uid
        );
    }
    
    match /configuration/theme {
    	allow read;
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['light', 'dark']) &&
        request.resource.data.keys().hasOnly(['light', 'dark']) &&
        request.resource.data.light is map &&
        request.resource.data.dark is map;
      allow delete: if isAdmin();
    }
    
    match /configuration/apps-script-cal-edit {
    	allow read: if
        get(/databases/$(database)/documents/configuration/settings).data.useCalendar == true &&
      	get(/databases/$(database)/documents/configuration/settings).data.calEdit == 'public' ||
        (get(/databases/$(database)/documents/configuration/settings).data.calEdit == 'users' && isLoggedIn());
      allow update: if 
      	request.resource.data.keys().hasAll(['password']) &&
        request.resource.data.keys().hasOnly(['password']) &&
        request.resource.data.password is string &&
        get(/databases/$(database)/documents/configuration/settings).data.useCalendar == true &&
        get(/databases/$(database)/documents/configuration/settings).data.calEdit == 'public' ||
        (get(/databases/$(database)/documents/configuration/settings).data.calEdit == 'users' && isLoggedIn());
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['password']) &&
        request.resource.data.keys().hasOnly(['password']) &&
        request.resource.data.password is string;
    }
    
    match /configuration/apps-script-cal-view {
    	allow read: if
        get(/databases/$(database)/documents/configuration/settings).data.useCalendar == true &&
      	get(/databases/$(database)/documents/configuration/settings).data.calView == 'public' ||
        (get(/databases/$(database)/documents/configuration/settings).data.calView == 'users' && isLoggedIn());
      allow update: if
      	request.resource.data.keys().hasAll(['password']) &&
        request.resource.data.keys().hasOnly(['password']) &&
        request.resource.data.password is string &&
        get(/databases/$(database)/documents/configuration/settings).data.useCalendar == true &&
        get(/databases/$(database)/documents/configuration/settings).data.calView == 'public' ||
        (get(/databases/$(database)/documents/configuration/settings).data.calView == 'users' && isLoggedIn());
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['password']) &&
        request.resource.data.keys().hasOnly(['password']) &&
        request.resource.data.password is string;
    }
    
    match /configuration/apps-script-mail {
    	allow read: if
        get(/databases/$(database)/documents/configuration/settings).data.useEmail == true &&
      	get(/databases/$(database)/documents/configuration/settings).data.email == 'public' ||
        (get(/databases/$(database)/documents/configuration/settings).data.email == 'users' && isLoggedIn());
      allow update: if
      	request.resource.data.keys().hasAll(['password']) &&
        request.resource.data.keys().hasOnly(['password']) &&
        request.resource.data.password is string &&
        get(/databases/$(database)/documents/configuration/settings).data.useEmail == true &&
        get(/databases/$(database)/documents/configuration/settings).data.email == 'public' ||
        (get(/databases/$(database)/documents/configuration/settings).data.email == 'users' && isLoggedIn());
      allow read, delete: if isWebmaster();
      allow create, update: if
        isWebmaster() &&
        request.resource.data.keys().hasAll(['password']) &&
        request.resource.data.keys().hasOnly(['password']) &&
        request.resource.data.password is string;
    }
    
    match /configuration/settings {
    	allow read;
      allow delete: if isAdmin();
      allow create: if 
        isAdmin() &&
        request.resource.data.keys().hasOnly(['calEdit', 'calID', 'calURL', 'calView', 'controlledAuth', 'defaultPage', 'email', 'footerTxt', 'mailURL', 'useCalendar', 'useEmail']) &&
        request.resource.data.get('calEdit', '') is string &&
        request.resource.data.get('calID', '') is string &&
        request.resource.data.get('calURL', '') is string &&
        request.resource.data.get('calView', '') is string &&
        request.resource.data.get('controlledAuth', false) is bool &&
        request.resource.data.get('defaultPage', '') is string &&
        request.resource.data.get('email', '') is string &&
        request.resource.data.get('footerTxt', '') is string &&
        request.resource.data.get('mailURL', '') is string &&
        request.resource.data.get('useCalendar', false) is bool &&
        request.resource.data.get('useEmail', false) is bool;
      allow update: if
        isAdmin() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['calEdit', 'calID', 'calURL', 'calView', 'controlledAuth', 'defaultPage', 'email', 'footerTxt', 'mailURL', 'useCalendar', 'useEmail']) &&
        request.resource.data.get('calEdit', '') is string &&
        request.resource.data.get('calID', '') is string &&
        request.resource.data.get('calURL', '') is string &&
        request.resource.data.get('calView', '') is string &&
        request.resource.data.get('controlledAuth', false) is bool &&
        request.resource.data.get('defaultPage', '') is string &&
        request.resource.data.get('email', '') is string &&
        request.resource.data.get('footerTxt', '') is string &&
        request.resource.data.get('mailURL', '') is string &&
        request.resource.data.get('useCalendar', false) is bool &&
        request.resource.data.get('useEmail', false) is bool;
      allow update: if
        isWebmaster() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['defaultPage', 'footerTxt']) && 
        request.resource.data.get('defaultPage', '') is string &&
        request.resource.data.get('footerTxt', '') is string;
    }
    
    match /configuration/priv-settings {
    	allow read: if isLoggedIn();
      allow delete: if isAdmin();
      allow create: if
        isAdmin() &&
        request.resource.data.keys().hasOnly(['addresses', 'consoleURL', 'meetLink', 'useMeeting']) &&
        request.resource.data.get('addresses', []) is list &&
        request.resource.data.get('consoleURL', '') is string &&
        request.resource.data.get('meetLink', '') is string &&
        request.resource.data.get('useMeeting', false) is bool;
      allow update: if
        isAdmin() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['addresses', 'consoleURL', 'meetLink', 'useMeeting']) &&
        request.resource.data.get('addresses', []) is list &&
        request.resource.data.get('consoleURL', '') is string &&
        request.resource.data.get('meetLink', '') is string &&
        request.resource.data.get('useMeeting', false) is bool;
      allow update: if
        isWebmaster() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['consoleURL']) &&
        request.resource.data.get('consoleURL', '') is string;
    }

    match /users/{userID} {
      allow read, write: if isAdmin();
    	allow read, delete: if request.auth.uid == userID;
      allow create: if request.auth.uid == userID && (get(/databases/$(database)/documents/configuration/settings).data.controlledAuth == false || !exists(/databases/$(database)/documents/configuration/settings)) &&
        request.resource.data.keys().hasOnly(['displayName', 'email', 'photoURL']) &&
        request.resource.data.get('displayName', '') is string &&
        request.resource.data.get('email', '') is string &&
        request.resource.data.get('photoURL', '') is string;
      allow update: if request.auth.uid == userID &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'email', 'photoURL']) &&
        request.resource.data.get('displayName', '') is string &&
        request.resource.data.get('email', '') is string &&
        request.resource.data.get('photoURL', '') is string;
    }

    match /new-users/{userID} {
      allow read, write: if isAdmin();
    }
  }
}